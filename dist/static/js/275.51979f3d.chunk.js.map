{"version":3,"file":"static/js/275.51979f3d.chunk.js","mappings":"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","sources":["views/formily/basic.jsx","views/formily/index.jsx","views/formily/jsonSchemaForm.jsx","views/formily/jsonshema.js"],"sourcesContent":["import React, { } from 'react';\r\nimport { createForm } from '@formily/core';\r\nimport {\r\n  FormProvider,\r\n  FormConsumer,\r\n  Field,\r\n} from '@formily/react';\r\nimport {\r\n  FormItem,\r\n  FormLayout,\r\n  Input,\r\n  NumberPicker,\r\n  FormButtonGroup,\r\n  Submit,\r\n} from '@formily/antd';\r\n\r\n// 创建表单实例\r\nconst basicForm = createForm();\r\n\r\nconst BasicForm = () => (<FormProvider form={basicForm}>\r\n  <FormLayout layout='vertical'>\r\n    <Field\r\n      name='input'\r\n      title='输入框'\r\n      required\r\n      initialValue=\"hello formily\"\r\n      decorator={[FormItem]}\r\n      component={[Input]}\r\n    />\r\n    <Field\r\n      name='inputNumber'\r\n      title='计数器'\r\n      required\r\n      initialValue={100}\r\n      decorator={[FormItem]}\r\n      component={[NumberPicker, {\r\n        placeholder: 'Please enter',\r\n        style: {\r\n          width: 100,\r\n        },\r\n      },]}\r\n    />\r\n  </FormLayout>\r\n  <FormConsumer>\r\n    {() => (\r\n      <div\r\n        style={{\r\n          margin: '20px 0',\r\n        }}\r\n      >\r\n        输入框响应值：{basicForm.values.input}\r\n      </div>\r\n    )}\r\n  </FormConsumer>\r\n  <FormButtonGroup>\r\n    <Submit onSubmit={() => console.log('【basicForm.values】', basicForm.values)}>提交控制台输入表单值</Submit>\r\n  </FormButtonGroup>\r\n</FormProvider>);\r\n\r\nexport default BasicForm;\r\n","import React, { Component } from 'react';\r\nimport BasicForm from './basic';\r\nimport JsonForm from './jsonSchemaForm';\r\n\r\nconst centerStyle = { textAlign: 'center' };\r\nconst formStyle = {\r\n  width: '800px',\r\n  margin: '0 auto',\r\n  padding: '10px',\r\n  border: '2px dashed #ddd',\r\n  marginBottom: '10px'\r\n};\r\nexport default function Formily() {\r\n  return (\r\n    <div className='formily-wrap'>\r\n      <h3 style={centerStyle}>formily.js for better form</h3>\r\n      <div className=\"demo-container\">\r\n        <div className=\"basic-form\" style={formStyle}>\r\n          <h3 style={centerStyle}>基本表单</h3>\r\n          <BasicForm />\r\n        </div>\r\n        <div className=\"jsonschema-form\" style={formStyle}>\r\n          <h3 style={centerStyle}>jsonschema 模式</h3>\r\n          <JsonForm />\r\n        </div>\r\n        <div className=\"interaction-form\" style={formStyle}>\r\n          <h3 style={centerStyle}>联动表单</h3>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { createForm } from '@formily/core';\r\nimport {\r\n  Card,\r\n  Spin,\r\n} from 'antd';\r\nimport {\r\n  Form,\r\n  FormItem,\r\n  FormGrid,\r\n  FormLayout,\r\n  Input,\r\n  DatePicker,\r\n  Cascader,\r\n  Select,\r\n  // IDUpload,\r\n  ArrayItems,\r\n  Editable,\r\n} from '@formily/antd';\r\nimport { createSchemaField } from '@formily/react';\r\nimport { action } from '@formily/reactive';\r\nimport { jsonShemaConfig, defaultFormData, formatLocationOptions } from './jsonshema';\r\n\r\n// // 创建表单实例\r\nconst jsonFormInstance = createForm();\r\n// // 创建schema实例\r\nconst SchemaField = createSchemaField({\r\n  components: {\r\n    FormItem,\r\n    FormGrid,\r\n    FormLayout,\r\n    Input,\r\n    DatePicker,\r\n    Cascader,\r\n    Select,\r\n    ArrayItems,\r\n    Editable,\r\n  },\r\n});\r\n// // 地址下拉数据源赋值操作\r\nconst setLocationOptions = (data) => {\r\n  jsonFormInstance && jsonFormInstance.setFieldState('address', (state) => {\r\n    state.dataSource = data;\r\n  });\r\n};\r\n\r\n// // 组件\r\nconst JsonForm = () => {\r\n  // TODO: 常见表单复用【新增、编辑、详情】\r\n  const [formTitle, setFormTitle] = useState('编辑');\r\n\r\n  // // loading\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const closeLoading = () => {\r\n    setLoading(false);\r\n  };\r\n\r\n  // 获取下拉数据源\r\n  const getLocationOptionData = () => {\r\n    fetch('//unpkg.com/china-location/dist/location.json')\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setLocationOptions(formatLocationOptions(data));\r\n        closeLoading();\r\n      });\r\n  };\r\n\r\n  const configFormData = () => {\r\n    // // 模拟常规：mounted时发请求并设置表单初始值\r\n    jsonFormInstance.setInitialValues(defaultFormData);\r\n  };\r\n  const initFormData = () => {\r\n    getLocationOptionData();\r\n    configFormData();\r\n  };\r\n\r\n  useEffect(() => {\r\n    // 表单数据初始化\r\n    initFormData();\r\n    return () => {\r\n      // componentWillUnmount....\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Card title={formTitle + '用户'}>\r\n      <Spin spinning={loading}>\r\n        <Form\r\n          form={jsonFormInstance}\r\n          labelCol={5}\r\n          wrapperCol={16}\r\n        >\r\n          <SchemaField schema={jsonShemaConfig} />\r\n        </Form>\r\n      </Spin>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default JsonForm;\r\n","export const jsonShemaConfig = {\r\n  type: 'object',\r\n  properties: {\r\n    username: {\r\n      type: 'string',\r\n      title: '用户名',\r\n      required: true,\r\n      'x-decorator': 'FormItem',\r\n      'x-component': 'Input',\r\n    },\r\n    name: {\r\n      type: 'void',\r\n      title: '姓名',\r\n      'x-decorator': 'FormItem',\r\n      'x-decorator-props': {\r\n        asterisk: true,\r\n        feedbackLayout: 'none',\r\n      },\r\n      'x-component': 'FormGrid',\r\n      properties: {\r\n        firstName: {\r\n          type: 'string',\r\n          required: true,\r\n          'x-decorator': 'FormItem',\r\n          'x-component': 'Input',\r\n          'x-component-props': {\r\n            placeholder: '姓',\r\n          },\r\n        },\r\n        lastName: {\r\n          type: 'string',\r\n          required: true,\r\n          'x-decorator': 'FormItem',\r\n          'x-component': 'Input',\r\n          'x-component-props': {\r\n            placeholder: '名',\r\n          },\r\n        },\r\n      },\r\n    },\r\n    email: {\r\n      type: 'string',\r\n      title: '邮箱',\r\n      required: true,\r\n      'x-decorator': 'FormItem',\r\n      'x-component': 'Input',\r\n      'x-validator': 'email',\r\n    },\r\n    gender: {\r\n      type: 'string',\r\n      title: '性别',\r\n      enum: [\r\n        {\r\n          label: '男',\r\n          value: 1,\r\n        },\r\n        {\r\n          label: '女',\r\n          value: 2,\r\n        },\r\n        {\r\n          label: '第三性别',\r\n          value: 3,\r\n        },\r\n      ],\r\n      'x-decorator': 'FormItem',\r\n      'x-component': 'Select',\r\n    },\r\n    birthday: {\r\n      type: 'string',\r\n      required: true,\r\n      title: '生日',\r\n      'x-decorator': 'FormItem',\r\n      'x-component': 'DatePicker',\r\n    },\r\n    address: {\r\n      type: 'string',\r\n      required: true,\r\n      title: '地址',\r\n      'x-decorator': 'FormItem',\r\n      'x-component': 'Cascader',\r\n      // 改为手动发请求初始数据\r\n      // 'x-reactions': '{{fetchAddress}}',\r\n    },\r\n    // idCard: {\r\n    //   type: 'string',\r\n    //   required: true,\r\n    //   title: '身份证复印件',\r\n    //   'x-decorator': 'FormItem',\r\n    //   'x-component': 'IDUpload',\r\n    // },\r\n    contacts: {\r\n      type: 'array',\r\n      required: true,\r\n      title: '联系人信息',\r\n      'x-decorator': 'FormItem',\r\n      'x-component': 'ArrayItems',\r\n      items: {\r\n        type: 'object',\r\n        'x-component': 'ArrayItems.Item',\r\n        properties: {\r\n          sort: {\r\n            type: 'void',\r\n            'x-decorator': 'FormItem',\r\n            'x-component': 'ArrayItems.SortHandle',\r\n          },\r\n          popover: {\r\n            type: 'void',\r\n            title: '完善联系人信息',\r\n            'x-decorator': 'Editable.Popover',\r\n            'x-component': 'FormLayout',\r\n            'x-component-props': {\r\n              layout: 'vertical',\r\n            },\r\n            'x-reactions': [\r\n              {\r\n                fulfill: {\r\n                  schema: {\r\n                    title: '{{$self.query(\".name\").value() }}',\r\n                  },\r\n                },\r\n              },\r\n            ],\r\n            properties: {\r\n              name: {\r\n                type: 'string',\r\n                title: '姓名',\r\n                required: true,\r\n                'x-decorator': 'FormItem',\r\n                'x-component': 'Input',\r\n                'x-component-props': {\r\n                  style: {\r\n                    width: 300,\r\n                  },\r\n                },\r\n              },\r\n              email: {\r\n                type: 'string',\r\n                title: '邮箱',\r\n                'x-decorator': 'FormItem',\r\n                'x-component': 'Input',\r\n                'x-validator': [{ required: true }, 'email'],\r\n                'x-component-props': {\r\n                  style: {\r\n                    width: 300,\r\n                  },\r\n                },\r\n              },\r\n              phone: {\r\n                type: 'string',\r\n                title: '手机号',\r\n                'x-decorator': 'FormItem',\r\n                'x-component': 'Input',\r\n                'x-validator': [{ required: true }, 'phone'],\r\n                'x-component-props': {\r\n                  style: {\r\n                    width: 300,\r\n                  },\r\n                },\r\n              },\r\n            },\r\n          },\r\n          remove: {\r\n            type: 'void',\r\n            'x-decorator': 'FormItem',\r\n            'x-component': 'ArrayItems.Remove',\r\n          },\r\n        },\r\n      },\r\n      properties: {\r\n        addition: {\r\n          type: 'void',\r\n          title: '新增联系人',\r\n          'x-component': 'ArrayItems.Addition',\r\n        },\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nexport const defaultFormData = {\r\n  username: 'chengyouthree',\r\n  firstName: 'cheng',\r\n  lastName: '....',\r\n  email: 'fuckjerry@nobody.com',\r\n  gender: 1,\r\n  birthday: '2050-01-03',\r\n  address: ['110000', '110000', '110101'],\r\n  idCard: [\r\n    {\r\n      name: 'this is image',\r\n      thumbUrl:\r\n        'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\r\n      uid: 'rc-upload-1615825692847-2',\r\n      url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\r\n    },\r\n  ],\r\n  contacts: [\r\n    { name: '张三', phone: '13245633378', email: 'zhangsan@gmail.com' },\r\n    { name: '李四', phone: '16873452678', email: 'lisi@gmail.com' },\r\n  ],\r\n};\r\n\r\n// // 格式化后台行政下拉数据源\r\nexport const formatLocationOptions = (data = {}) => {\r\n  const getKeyValueList = (obj = {}) => Object.entries(obj) || [];\r\n\r\n  return getKeyValueList(data).map(([provinceCode, provinceObj]) => ({\r\n    value: provinceCode,\r\n    label: provinceObj.name,\r\n    children: getKeyValueList(provinceObj.cities).map(([cityCode, cityObj]) => ({\r\n      value: cityCode,\r\n      label: cityObj.name,\r\n      children: getKeyValueList(cityObj.districts).map(([code, name]) => ({\r\n        value: code,\r\n        label: name,\r\n        children: null\r\n      }))\r\n    }))\r\n  }));\r\n};\r\n"],"names":["basicForm","createForm","form","layout","name","title","required","initialValue","decorator","FormItem","component","Input","NumberPicker","placeholder","style","width","margin","values","input","onSubmit","console","log","centerStyle","textAlign","formStyle","padding","border","marginBottom","Formily","className","jsonFormInstance","SchemaField","createSchemaField","components","FormGrid","FormLayout","DatePicker","Cascader","Select","ArrayItems","Editable","useState","formTitle","loading","setLoading","getLocationOptionData","fetch","then","res","json","data","setFieldState","state","dataSource","setLocationOptions","formatLocationOptions","initFormData","setInitialValues","defaultFormData","useEffect","spinning","labelCol","wrapperCol","schema","jsonShemaConfig","type","properties","username","asterisk","feedbackLayout","firstName","lastName","email","gender","enum","label","value","birthday","address","contacts","items","sort","popover","fulfill","phone","remove","addition","idCard","thumbUrl","uid","url","getKeyValueList","obj","Object","entries","map","provinceCode","provinceObj","children","cities","cityCode","cityObj","districts"],"sourceRoot":""}